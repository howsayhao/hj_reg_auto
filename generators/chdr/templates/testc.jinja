/*
 * {{get_inst_name(node)|upper}} Test - Generated by HRDA
 */
#include <stdio.h>
#include "{{get_inst_name(node)}}.h"

{% for child in node.descendants(unroll=True, skip_not_present=False, in_post_order=True) -%}
{% if isinstance(child, RegNode) -%}
{{get_hier_name(child)}}_t {{get_hier_name(child)}}_default = {
    .reg = {
        {%- for field in get_all_fields(child) -%}
        {{"0X%X"|format(field[2])}}{%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
    }
};
{% endif %}
{%- endfor %}
static const reg_info_t {{get_inst_name(node)}}_reg_info_arr[] = {
    {%- for child in node.descendants(unroll=True, skip_not_present=False, in_post_order=True) %}
    {%- if isinstance(child, RegNode) %}
    {
        .default_ptr = (uint64_t *)&{{get_hier_name(child)}}_default,
        .mirror_val = (uint64_t){{get_reset_val(child)}},
        .addr = {{get_hier_name(child)|upper}},
        .access = {
            .r = {{get_acc_bit_vec(child, "r")}},
            .rclr = {{get_acc_bit_vec(child, "rclr")}},
            .rset = {{get_acc_bit_vec(child, "rset")}},
            .w = {{get_acc_bit_vec(child, "w")}},
            .woclr = {{get_acc_bit_vec(child, "woclr")}},
            .woset = {{get_acc_bit_vec(child, "woset")}},
            .wot = {{get_acc_bit_vec(child, "wot")}},
            .wzc = {{get_acc_bit_vec(child, "wzc")}},
            .wzs = {{get_acc_bit_vec(child, "wzs")}},
            .wzt = {{get_acc_bit_vec(child, "wzt")}},
            .singlepulse = {{get_acc_bit_vec(child, "singlepulse")}}
        }
    },
    {%- endif %}
    {%- endfor %}
    {
        .default_ptr = NULL,
        .mirror_val = 0,
        .addr = 0,
        .access = {
            .r = 0,
            .rclr = 0,
            .rset = 0,
            .w = 0,
            .woclr = 0,
            .woset = 0,
            .wot = 0,
            .wzc = 0,
            .wzs = 0,
            .wzt = 0,
            .singlepulse = 0
        }
    }
};
